// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/x0rzkov/gcse/shared/proto/store.proto

package gcsepb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PackageInfo struct {
	Name         string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Package      string        `protobuf:"bytes,2,opt,name=package" json:"package,omitempty"`
	Author       string        `protobuf:"bytes,3,opt,name=author" json:"author,omitempty"`
	Stars        int32         `protobuf:"varint,4,opt,name=stars" json:"stars,omitempty"`
	Synopsis     string        `protobuf:"bytes,5,opt,name=synopsis" json:"synopsis,omitempty"`
	Description  string        `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	ProjectUrl   string        `protobuf:"bytes,7,opt,name=project_url,json=projectUrl" json:"project_url,omitempty"`
	ReadmeFn     string        `protobuf:"bytes,8,opt,name=readme_fn,json=readmeFn" json:"readme_fn,omitempty"`
	ReadmeData   string        `protobuf:"bytes,9,opt,name=readme_data,json=readmeData" json:"readme_data,omitempty"`
	Imports      []string      `protobuf:"bytes,10,rep,name=imports" json:"imports,omitempty"`
	TestImports  []string      `protobuf:"bytes,11,rep,name=test_imports,json=testImports" json:"test_imports,omitempty"`
	Exported     []string      `protobuf:"bytes,12,rep,name=exported" json:"exported,omitempty"`
	References   []string      `protobuf:"bytes,18,rep,name=references" json:"references,omitempty"`
	CrawlingInfo *CrawlingInfo `protobuf:"bytes,17,opt,name=crawling_info,json=crawlingInfo" json:"crawling_info,omitempty"`
	// Available if the package is not the repo's root.
	FolderInfo *FolderInfo `protobuf:"bytes,14,opt,name=folder_info,json=folderInfo" json:"folder_info,omitempty"`
	// Available if the package is the repo's root.
	RepoInfo *RepoInfo `protobuf:"bytes,15,opt,name=repo_info,json=repoInfo" json:"repo_info,omitempty"`
}

func (m *PackageInfo) Reset()                    { *m = PackageInfo{} }
func (m *PackageInfo) String() string            { return proto.CompactTextString(m) }
func (*PackageInfo) ProtoMessage()               {}
func (*PackageInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *PackageInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PackageInfo) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *PackageInfo) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *PackageInfo) GetStars() int32 {
	if m != nil {
		return m.Stars
	}
	return 0
}

func (m *PackageInfo) GetSynopsis() string {
	if m != nil {
		return m.Synopsis
	}
	return ""
}

func (m *PackageInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PackageInfo) GetProjectUrl() string {
	if m != nil {
		return m.ProjectUrl
	}
	return ""
}

func (m *PackageInfo) GetReadmeFn() string {
	if m != nil {
		return m.ReadmeFn
	}
	return ""
}

func (m *PackageInfo) GetReadmeData() string {
	if m != nil {
		return m.ReadmeData
	}
	return ""
}

func (m *PackageInfo) GetImports() []string {
	if m != nil {
		return m.Imports
	}
	return nil
}

func (m *PackageInfo) GetTestImports() []string {
	if m != nil {
		return m.TestImports
	}
	return nil
}

func (m *PackageInfo) GetExported() []string {
	if m != nil {
		return m.Exported
	}
	return nil
}

func (m *PackageInfo) GetReferences() []string {
	if m != nil {
		return m.References
	}
	return nil
}

func (m *PackageInfo) GetCrawlingInfo() *CrawlingInfo {
	if m != nil {
		return m.CrawlingInfo
	}
	return nil
}

func (m *PackageInfo) GetFolderInfo() *FolderInfo {
	if m != nil {
		return m.FolderInfo
	}
	return nil
}

func (m *PackageInfo) GetRepoInfo() *RepoInfo {
	if m != nil {
		return m.RepoInfo
	}
	return nil
}

type PersonInfo struct {
	CrawlingInfo *CrawlingInfo `protobuf:"bytes,1,opt,name=crawling_info,json=crawlingInfo" json:"crawling_info,omitempty"`
}

func (m *PersonInfo) Reset()                    { *m = PersonInfo{} }
func (m *PersonInfo) String() string            { return proto.CompactTextString(m) }
func (*PersonInfo) ProtoMessage()               {}
func (*PersonInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *PersonInfo) GetCrawlingInfo() *CrawlingInfo {
	if m != nil {
		return m.CrawlingInfo
	}
	return nil
}

type Repository struct {
	Branch    string `protobuf:"bytes,6,opt,name=branch" json:"branch,omitempty"`
	Signature string `protobuf:"bytes,7,opt,name=signature" json:"signature,omitempty"`
	// map from relative path, e.g. "proto/store", to Package
	Packages     map[string]*Package `protobuf:"bytes,8,rep,name=packages" json:"packages,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ReadmeFn     string              `protobuf:"bytes,2,opt,name=ReadmeFn" json:"ReadmeFn,omitempty"`
	ReadmeData   string              `protobuf:"bytes,3,opt,name=ReadmeData" json:"ReadmeData,omitempty"`
	Stars        int32               `protobuf:"varint,4,opt,name=stars" json:"stars,omitempty"`
	CrawlingInfo *CrawlingInfo       `protobuf:"bytes,5,opt,name=crawling_info,json=crawlingInfo" json:"crawling_info,omitempty"`
}

func (m *Repository) Reset()                    { *m = Repository{} }
func (m *Repository) String() string            { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()               {}
func (*Repository) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Repository) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Repository) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *Repository) GetPackages() map[string]*Package {
	if m != nil {
		return m.Packages
	}
	return nil
}

func (m *Repository) GetReadmeFn() string {
	if m != nil {
		return m.ReadmeFn
	}
	return ""
}

func (m *Repository) GetReadmeData() string {
	if m != nil {
		return m.ReadmeData
	}
	return ""
}

func (m *Repository) GetStars() int32 {
	if m != nil {
		return m.Stars
	}
	return 0
}

func (m *Repository) GetCrawlingInfo() *CrawlingInfo {
	if m != nil {
		return m.CrawlingInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*PackageInfo)(nil), "gcse.PackageInfo")
	proto.RegisterType((*PersonInfo)(nil), "gcse.PersonInfo")
	proto.RegisterType((*Repository)(nil), "gcse.Repository")
}

func init() {
	proto.RegisterFile("github.com/x0rzkov/gcse/shared/proto/store.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 538 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x5d, 0x6b, 0x13, 0x41,
	0x14, 0x65, 0x9b, 0x8f, 0x6e, 0xee, 0xb6, 0xb5, 0x0e, 0x22, 0x43, 0x94, 0xba, 0xc6, 0x97, 0x80,
	0x90, 0x60, 0x54, 0x94, 0x3e, 0xaa, 0x2d, 0xd4, 0xa7, 0xb2, 0xe0, 0x8b, 0x2f, 0x61, 0xb2, 0x7b,
	0x77, 0xb3, 0x36, 0x99, 0x59, 0xee, 0x4c, 0xaa, 0xf9, 0x27, 0xfe, 0x31, 0xff, 0x8f, 0xcc, 0x47,
	0xb7, 0x91, 0x22, 0xe4, 0xed, 0x9e, 0x73, 0xee, 0x19, 0xee, 0xcc, 0x3d, 0x03, 0xef, 0xaa, 0xda,
	0x2c, 0x37, 0x8b, 0x49, 0xae, 0xd6, 0xd3, 0x42, 0xdc, 0xd6, 0x45, 0x81, 0xb2, 0xca, 0xe5, 0xb4,
	0xca, 0x35, 0x4e, 0xf5, 0x52, 0x10, 0x16, 0xd3, 0x86, 0x94, 0x51, 0x53, 0x6d, 0x14, 0xe1, 0xc4,
	0xd5, 0xac, 0x6b, 0xe5, 0xe1, 0xfb, 0xfd, 0xbd, 0x4d, 0x5d, 0x20, 0x79, 0xf3, 0xe8, 0x77, 0x17,
	0x92, 0x6b, 0x91, 0xdf, 0x88, 0x0a, 0xaf, 0x64, 0xa9, 0x18, 0x83, 0xae, 0x14, 0x6b, 0xe4, 0x51,
	0x1a, 0x8d, 0x07, 0x99, 0xab, 0x19, 0x87, 0xc3, 0xc6, 0xb7, 0xf0, 0x03, 0x47, 0xdf, 0x41, 0xf6,
	0x14, 0xfa, 0x62, 0x63, 0x96, 0x8a, 0x78, 0xc7, 0x09, 0x01, 0xb1, 0x27, 0xd0, 0xd3, 0x46, 0x90,
	0xe6, 0xdd, 0x34, 0x1a, 0xf7, 0x32, 0x0f, 0xd8, 0x10, 0x62, 0xbd, 0x95, 0xaa, 0xd1, 0xb5, 0xe6,
	0x3d, 0xd7, 0xdf, 0x62, 0x96, 0x42, 0x52, 0xa0, 0xce, 0xa9, 0x6e, 0x4c, 0xad, 0x24, 0xef, 0x3b,
	0x79, 0x97, 0x62, 0x2f, 0x20, 0x69, 0x48, 0xfd, 0xc0, 0xdc, 0xcc, 0x37, 0xb4, 0xe2, 0x87, 0xae,
	0x03, 0x02, 0xf5, 0x8d, 0x56, 0xec, 0x19, 0x0c, 0x08, 0x45, 0xb1, 0xc6, 0x79, 0x29, 0x79, 0xec,
	0xcf, 0xf7, 0xc4, 0xa5, 0x73, 0x07, 0xb1, 0x10, 0x46, 0xf0, 0x81, 0x77, 0x7b, 0xea, 0x8b, 0x30,
	0xc2, 0x5e, 0xb2, 0x5e, 0x37, 0x8a, 0x8c, 0xe6, 0x90, 0x76, 0xec, 0x25, 0x03, 0x64, 0x2f, 0xe1,
	0xc8, 0xa0, 0x36, 0xf3, 0x3b, 0x39, 0x71, 0x72, 0x62, 0xb9, 0xab, 0xd0, 0x32, 0x84, 0x18, 0x7f,
	0xd9, 0x12, 0x0b, 0x7e, 0xe4, 0xe4, 0x16, 0xb3, 0x33, 0x00, 0xc2, 0x12, 0x09, 0x65, 0x8e, 0x9a,
	0x33, 0xa7, 0xee, 0x30, 0xec, 0x03, 0x1c, 0xe7, 0x24, 0x7e, 0xae, 0x6a, 0x59, 0xcd, 0x6b, 0x59,
	0x2a, 0xfe, 0x38, 0x8d, 0xc6, 0xc9, 0x8c, 0x4d, 0xec, 0xe6, 0x26, 0x9f, 0x83, 0x64, 0x97, 0x93,
	0x1d, 0xe5, 0x3b, 0x88, 0xbd, 0x81, 0xa4, 0x54, 0xab, 0x02, 0xc9, 0xdb, 0x4e, 0x9c, 0xed, 0xd4,
	0xdb, 0x2e, 0x9d, 0xe0, 0x4c, 0x50, 0xb6, 0x35, 0x7b, 0x6d, 0x9f, 0xa8, 0x51, 0xde, 0xf0, 0xc8,
	0x19, 0x4e, 0xbc, 0x21, 0xc3, 0x46, 0xb9, 0xf6, 0x98, 0x42, 0x35, 0xba, 0x00, 0xb8, 0x46, 0xd2,
	0x4a, 0x3a, 0xeb, 0x83, 0x31, 0xa3, 0xfd, 0xc6, 0x1c, 0xfd, 0x39, 0x00, 0xb0, 0xa7, 0xeb, 0xda,
	0x28, 0xda, 0xda, 0xc8, 0x2c, 0x48, 0xc8, 0x7c, 0x19, 0x76, 0x1c, 0x10, 0x7b, 0x0e, 0x03, 0x5d,
	0x57, 0x52, 0x98, 0x0d, 0x61, 0x58, 0xee, 0x3d, 0xc1, 0xce, 0x21, 0x0e, 0x99, 0xd3, 0x3c, 0x4e,
	0x3b, 0xe3, 0x64, 0x76, 0x76, 0x3f, 0xb7, 0x3f, 0x79, 0x12, 0x62, 0xac, 0x2f, 0xa4, 0xa1, 0x6d,
	0xd6, 0xf6, 0xdb, 0xe5, 0x64, 0x21, 0x06, 0x21, 0xbf, 0x2d, 0xb6, 0xcb, 0xc9, 0xda, 0x0c, 0x84,
	0x10, 0xef, 0x30, 0xff, 0x09, 0xf2, 0x83, 0xb7, 0xe8, 0xed, 0xf7, 0x16, 0xc3, 0xaf, 0x70, 0xfc,
	0xcf, 0x94, 0xec, 0x14, 0x3a, 0x37, 0xb8, 0x0d, 0xbf, 0xcd, 0x96, 0xec, 0x15, 0xf4, 0x6e, 0xc5,
	0x6a, 0xe3, 0xbf, 0x5a, 0x32, 0x3b, 0xf6, 0x67, 0x06, 0x57, 0xe6, 0xb5, 0xf3, 0x83, 0x8f, 0xd1,
	0xa7, 0xf8, 0x7b, 0xdf, 0x4a, 0xcd, 0x62, 0xd1, 0x77, 0x5f, 0xf9, 0xed, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xd7, 0xe5, 0xfe, 0xf4, 0x3f, 0x04, 0x00, 0x00,
}
